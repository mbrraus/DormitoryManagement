@page "/students"
@using DormitoryManagement.Data.Models
@inject StudentService StudentService
@inject NavigationManager NavigationManager
@rendermode InteractiveServer

@using System.Collections

@if (_isLoading)
{
    <p>Loading..</p>
}
else
{
    <div class="overflow-x-auto">
        <div class="flex justify-end mb-2"> <!-- Container with flexbox and alignment to the right -->
                    <button class="btn btn-primary" @onclick="AddStudent">Add Student</button> <!-- Add Student button -->
                </div>
        <table class="table table-zebra">
            <thead>
            <tr>
                <th>Name</th>
                <th>Surname</th>
                <th>Status</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var student in _students)
            {
                <tr>
                    <td>@student.FirstName</td>
                    <td>@student.LastName</td>
                    <td>@(student.RoomAssignment != null ? "Assigned" : "Not Assigned")</td>
                    <td>
                        <a href="@($"students/{student.Id}")" class="btn btn-ghost">Go</a>
                    </td>
                </tr>
            }
            </tbody>
        </table>
    </div>
}
@code {
    private bool _isLoading;
    private List<Student> _students = [];

    protected override async Task OnInitializedAsync()
    {
        _isLoading = true;
        _students = await StudentService.GetAllStudents();
        _isLoading = false;
    }

    private async Task AddStudent(MouseEventArgs arg)
    {
        NavigationManager.NavigateTo("students/student-add");
    }

}